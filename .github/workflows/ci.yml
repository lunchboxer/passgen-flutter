name: Passgen CI

on:
  # Run tests on every push to main and PRs
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggers
  workflow_dispatch:

jobs:
  test:
    name: Analyze and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            /opt/hostedtoolcache/flutter
          key: flutter-deps-${{ hashFiles('pubspec.lock') }}
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'
      - run: flutter pub get
      - run: dart format --output=none --set-exit-if-changed .
      - run: dart analyze
      - run: flutter test

  build:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: test  # Only build if tests pass
    # Only run on version tags (v*)
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            /opt/hostedtoolcache/flutter
          key: flutter-deps-${{ hashFiles('pubspec.lock') }}
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle.kts') }}
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'
      - run: flutter pub get
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.base64
          base64 -di keystore.base64 > android/app/upload-keystore.jks
          chmod 644 android/app/upload-keystore.jks
      - name: Build APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: flutter build apk --release
      - name: Build Web
        run: flutter build web --release
      - name: Get Version
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "APK_NAME=passgen-v${TAG_VERSION}.apk" >> $GITHUB_OUTPUT
          echo "WEB_ZIP=passgen-web-v${TAG_VERSION}.zip" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=v${TAG_VERSION}" >> $GITHUB_OUTPUT
      - name: Package Web Build
        run: |
          cd build/web
          zip -r ../../${{ steps.version.outputs.WEB_ZIP }} ./*
          cd ../..
      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk ${{ steps.version.outputs.APK_NAME }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.RELEASE_TAG }}
          release_name: Release ${{ steps.version.outputs.RELEASE_TAG }}
          draft: false
          prerelease: false
      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.version.outputs.APK_NAME }}
          asset_name: ${{ steps.version.outputs.APK_NAME }}
          asset_content_type: application/vnd.android.package-archive
      - name: Upload Web Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.version.outputs.WEB_ZIP }}
          asset_name: ${{ steps.version.outputs.WEB_ZIP }}
          asset_content_type: application/zip
