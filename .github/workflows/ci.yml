# This workflow will run tests and analyze the code for the Passgen Flutter project

name: Passgen CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs for different testing and analysis tasks
  
  # Test job - checks code formatting, runs static analysis, and runs tests
  test:
    name: Analyze code
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Check for any formatting issues
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Statically analyze the Dart code for any errors
      - name: Analyze project source
        run: dart analyze

      # Run widget tests
      - name: Run tests
        run: flutter test

  # Build job - builds the application for different platforms
  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: [test]  # Only build if tests and theme tests pass
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.base64
          base64 -di keystore.base64 > android/app/upload-keystore.jks
          chmod 644 android/app/upload-keystore.jks

          # Verify the keystore
          keytool -list -v -keystore android/app/upload-keystore.jks -storepass ${{ secrets.KEYSTORE_PASSWORD }} -alias ${{ secrets.KEY_ALIAS }} -keypass "${{ secrets.KEY_PASSWORD }}" || echo "Keystore verification failed"
          
      # Build Android APK
      - name: Build APK
        run: flutter build apk --release --dart-define=KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} --dart-define=KEY_ALIAS=${{ secrets.KEY_ALIAS }} --dart-define=KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}

      # Build web version
      - name: Build Web
        run: flutter build web
