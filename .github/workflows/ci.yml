# This workflow will run tests and analyze the code for the Passgen Flutter project

name: Passgen CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs for different testing and analysis tasks
  
  # Analyze job - checks code formatting and runs static analysis
  analyze:
    name: Analyze code
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Check for any formatting issues
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Statically analyze the Dart code for any errors
      - name: Analyze project source
        run: dart analyze

  # Test job - runs all unit, widget, and integration tests
  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: analyze  # Only run tests if analysis passes
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run widget tests
      - name: Run widget tests
        run: flutter test test/widget_test.dart

      # Run core tests
      - name: Run core tests
        run: flutter test test/core

      # Run model tests
      - name: Run model tests
        run: flutter test test/models

      # Run UI component tests
      - name: Run UI component tests
        run: flutter test test/ui/components

      # Run UI screen tests
      - name: Run UI screen tests
        run: flutter test test/ui

      # Run integration tests
      - name: Run integration tests
        run: flutter test test/integration

  # Theme test job - runs theme-specific tests
  theme_tests:
    name: Run theme tests
    runs-on: ubuntu-latest
    needs: analyze  # Only run theme tests if analysis passes
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run theme unit tests
      - name: Run theme unit tests
        run: flutter test test/core/theme_manager_test.dart

      # Run theme widget tests
      - name: Run theme widget tests
        run: flutter test test/ui/components/theme_aware_components_test.dart

      # Run theme integration tests
      - name: Run theme integration tests
        run: flutter test test/integration/theme_switching_workflow_test.dart

  # Performance test job - runs performance benchmarks
  performance:
    name: Run performance tests
    runs-on: ubuntu-latest
    needs: test  # Only run performance tests if regular tests pass
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run performance tests
      - name: Run performance tests
        run: flutter test test/performance

  # Build job - builds the application for different platforms
  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: [test, theme_tests]  # Only build if tests and theme tests pass
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Build Android APK
      - name: Build Android APK
        run: flutter build apk --debug

      # Build web version
      - name: Build Web
        run: flutter build web

  # Security check job - verifies word list integrity
  security:
    name: Security checks
    runs-on: ubuntu-latest
    needs: analyze  # Only run security checks if analysis passes
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Java (required for Android builds)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      # Get Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run security-related tests
      - name: Run security tests
        run: flutter test test/core/word_list_verifier_test.dart
