name: Release Build

on:
  push:
    tags:
      - 'v*'  # Pattern for version tags (v1.0.0, v2.3.4, etc.)
    # branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            /opt/hostedtoolcache/flutter
          key: flutter-deps-${{ hashFiles('pubspec.lock') }}
          
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle.kts') }}
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.0'
          channel: 'stable'
      - run: flutter pub get
      
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.base64
          base64 -di keystore.base64 > android/app/upload-keystore.jks
          chmod 644 android/app/upload-keystore.jks

      - name: Build Split APKs
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          flutter build apk --release --split-per-abi
          bash android/rename_apks.sh

      - name: Verify renamed APKs
        run: |
          ls -la build/app/outputs/flutter-apk/
          echo "Renamed files:"
          ls -la build/app/outputs/flutter-apk/passgen-* || echo "No renamed files found"

      - name: Get Version
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "WEB_ZIP=passgen-web-v${TAG_VERSION}.zip" >> $GITHUB_ENV
          echo "RELEASE_TAG=v${TAG_VERSION}" >> $GITHUB_ENV

      # First upload as workflow artifact (for temporary storage)
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: passgen-apks
          path: |
            build/app/outputs/flutter-apk/passgen-armeabi-v7a-v*.apk
            build/app/outputs/flutter-apk/passgen-arm64-v8a-v*.apk
            build/app/outputs/flutter-apk/passgen-x86_64-v*.apk
          retention-days: 1

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          # name: Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/passgen-armeabi-v7a-v*.apk
            build/app/outputs/flutter-apk/passgen-arm64-v8a-v*.apk
            build/app/outputs/flutter-apk/passgen-x86_64-v*.apk

      - name: Build Web
        run: flutter build web --release --base-href /passgen_gui/

      - name: Package Web Build
        run: |
          cd build/web
          zip -r ../../${{ env.WEB_ZIP }} ./*
          cd ../..

      # Upload web build to release
      - name: Upload Web to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.WEB_ZIP }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
